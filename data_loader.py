import os
import pandas as pd
from tensorflow.keras.preprocessing.image import ImageDataGenerator

# –ü—É—Ç–∏ –∫ –ø–∞–ø–∫–∞–º —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
BASE_DIR = "dataset"
TRAIN_DIR = os.path.join(BASE_DIR, 'train')
VALID_DIR = os.path.join(BASE_DIR, 'valid')
TEST_DIR = os.path.join(BASE_DIR, 'test')


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∞–Ω–Ω–æ—Ç–∞—Ü–∏–π
def load_annotations(csv_path):
    # –ó–∞–≥—Ä—É–∂–∞–µ–º CSV
    annotations = pd.read_csv(csv_path)

    print("üìå –ó–∞–≥—Ä—É–∂–µ–Ω CSV-—Ñ–∞–π–ª —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏:", annotations.columns)  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º 'class' –≤–º–µ—Å—Ç–æ 'label'
    if 'class' not in annotations.columns:
        raise ValueError(f"‚ùå –í —Ñ–∞–π–ª–µ {csv_path} –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ç–æ–ª–±–µ—Ü 'class'. –ü—Ä–æ–≤–µ—Ä—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É CSV!")

    # –£–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –ø—É—Å—Ç—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –≤ 'class'
    annotations = annotations.dropna(subset=['class'])

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –º–µ—Ç–∫–∏ –≤ —Å—Ç—Ä–æ–∫–∏ (–µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –≤ —Å—Ç—Ä–æ–∫–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ)
    annotations['class'] = annotations['class'].astype(str)

    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Å—Ç–æ–ª–±–µ—Ü 'class' –≤ 'label' –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ä–∞–±–æ—Ç—ã —Å Keras
    annotations.rename(columns={'class': 'label'}, inplace=True)

    print("‚úÖ –ú–µ—Ç–∫–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö:\n", annotations.head())

    return annotations


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
def create_data_generator(directory, csv_path, batch_size=32, target_size=(224, 224)):
    datagen = ImageDataGenerator(rescale=1. / 255)  # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

    annotations = load_annotations(csv_path)

    print("–ü—Ä–∏–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö –∏–∑ CSV:")
    print(annotations.head())  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–¥—É—Ç –≤ y_col

    generator = datagen.flow_from_dataframe(
        dataframe=annotations,
        directory=directory,
        x_col="filename",
        y_col="label",  # –¢–µ–ø–µ—Ä—å –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º 'label', –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª 'class'
        target_size=target_size,
        batch_size=batch_size,
        class_mode="categorical",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º 'categorical', —Ç–∞–∫ –∫–∞–∫ –º–µ—Ç–∫–∏ —Ç–µ–ø–µ—Ä—å —Å—Ç—Ä–æ–∫–∏
        shuffle=True
    )

    return generator
