from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing import image
import numpy as np

# –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—É—á–µ–Ω–Ω—É—é –º–æ–¥–µ–ª—å
model = load_model("mobilenetv2_mushroom.h5")

# –°–ø–∏—Å–æ–∫ –∫–ª–∞—Å—Å–æ–≤
class_names = ['—Å—ä–µ–¥–æ–±–Ω—ã–π', '–Ω–µ—Å—ä–µ–¥–æ–±–Ω—ã–π', '–¥—Ä—É–≥–∏–µ_–∫–ª–∞—Å—Å—ã_–≥—Ä–∏–±–æ–≤...']  # –ó–∞–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–∏ –∫–ª–∞—Å—Å—ã


def predict_mushroom(image_path):
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    img = image.load_img(image_path, target_size=(224, 224))
    img_array = image.img_to_array(img) / 255.0  # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è
    img_array = np.expand_dims(img_array, axis=0)  # –î–æ–±–∞–≤–ª—è–µ–º batch —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å

    # –î–µ–ª–∞–µ–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
    prediction = model.predict(img_array)
    class_idx = np.argmax(prediction)  # –ò–Ω–¥–µ–∫—Å –Ω–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω–æ–≥–æ –∫–ª–∞—Å—Å–∞

    return class_names[class_idx]


# –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
image_path = "(Gemeine_Steinpilz)_Boletus_edulis.jpg"  # –ó–∞–º–µ–Ω–∏ –Ω–∞ –ø—É—Ç—å –∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é –≥—Ä–∏–±–∞
result = predict_mushroom(image_path)
print(f"üîç –≠—Ç–æ—Ç –≥—Ä–∏–±: {result}")